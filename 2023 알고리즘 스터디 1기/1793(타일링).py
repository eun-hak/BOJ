
dp = [0]*300
#DP 바텀업 방식 사용

while(True):
    try:
        n = int(input())
        dp[0] = 1
        dp[1] = 1
        dp[2] = 3
        for i in range(3,n+1):
            dp[i] = dp[i - 1] + 2 * dp[i - 2]    #점화식
        print(dp[n])
    except:
        break




'''
d[i]의 연관성여부를 따져보겠다.
먼저 d[i]와 d[i-1]의 관계는 d[i-1]의 경우의 수에서 i번째 줄만 채워주면 되므로
d[i]에는 d[i-1]의 경우의수에서 2 x 1의 타일만 채워주면 되므로 d[i-1]과 d[i]의 관계는

d[i] = (d[i-1] + 또다른 경우의 수) 로 결론을 지을 수 있고

그다음은 d[i]와 d[i-2]와의 관계이다. 이때는 d[i-2]에서 남은두칸을 2 x 1타일 두개로
채워 줄수 있지만 이는 d[i-1]에 2 x 1타일을 채워주는 방식과 겹치므로 고려해주지 않는다.
따라서 d[i]를 만들어 줄 때 d[i-2]경우의 수에서 1 x 2타일을 2개 채우거나 2 x 2타일을 1개 채우는 2가지경우의수가 있으므로

d[i] = (d[i-1] + 2 * d[i-2]) + 또다른 경우의 수 로 결론을 짓는다.
'''
